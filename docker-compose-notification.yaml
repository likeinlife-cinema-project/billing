version: "3.4"

services:
  notification_admin:
    build:
      context: notification_service/admin
      args:
        - COMMAND=admin
    env_file:
      - .env
    environment:
      PG_ADMIN_NF_DB_HOST: ${PG_ADMIN_NF_DB_HOST:-postgres}
      PG_ADMIN_NF_DB_PORT: ${PG_ADMIN_NF_DB_PORT:-5432}
      AUTH_RSA_PUBLIC_PATH: /run/secrets/rsa_pub
    depends_on:
      - postgres
    expose:
      - 8000
    secrets:
      - rsa_pub
    configs:
      - source: templates
        target: /opt/admin/cli/templates.json

  regular_notify_converter:
    build:
      context: notification_service/admin
      args:
        - COMMAND=celery
    restart: always
    env_file:
      - .env
    environment:
      PG_ADMIN_NF_DB_HOST: ${PG_ADMIN_NF_DB_HOST:-postgres}
      PG_ADMIN_NF_DB_PORT: ${PG_ADMIN_NF_DB_PORT:-5432}
      AUTH_RSA_PUBLIC_PATH: /run/secrets/rsa_pub
    depends_on:
      - postgres
      - notification_admin
      - redis
    secrets:
      - rsa_pub

  notification-api:
    build:
      context: notification_service/notification_api
    restart: on-failure
    env_file:
      - .env
    depends_on:
      rabbit:
        condition: service_healthy
      postgres:
        condition: service_started
    environment:
      API_RABBIT_HOST: ${API_RABBIT_HOST:-rabbit}
      API_RABBIT_PORT: ${API_RABBIT_PORT:-5672}
      API_POSTGRES_HOST: ${API_POSTGRES_HOST:-postgres}
      API_POSTGRES_PORT: ${API_POSTGRES_PORT:-5432}
      API_PROJECT_ROOT_URL: /
    expose:
      - 8001

  notification-notify-sender:
    build:
      context: notification_service/notification_service
      args:
        - COMMAND=notify
    env_file:
      - .env
    depends_on:
      rabbit:
        condition: service_healthy
      mailpit:
        condition: service_started
      notification-rabbit-setup:
        condition: service_completed_successfully

  notification-user-provider:
    build:
      context: notification_service/notification_service
      args:
        - COMMAND=user
    env_file:
      - .env
    depends_on:
      rabbit:
        condition: service_healthy
      postgres:
        condition: service_healthy
      notification-rabbit-setup:
        condition: service_completed_successfully
      auth_service:
        condition: service_healthy

  notification-rabbit-setup:
    build:
      context: notification_service/notification_service
      args:
        - COMMAND=rabbit
    env_file:
      - .env
    depends_on:
      rabbit:
        condition: service_healthy

  mailpit:
    container_name: mailpit
    restart: on-failure
    image: axllent/mailpit:latest
    environment:
      - MP_SMTP_AUTH_ALLOW_INSECURE=true
      - MP_SMTP_AUTH_ACCEPT_ANY=true
    ports:
      - "8025:8025"
      - "1025:1025"

secrets:
  rsa_pub:
    file: ./keys/rsa.pub

configs:
  templates:
    file: ./notification_templates/templates.json