version: "3"

services:

  billing-service:
    extends:
      file: docker-compose-billing.yaml
      service: billing_service
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://localhost:5000"
        tag: "billing"

  celery:
    extends:
      file: docker-compose-billing.yaml
      service: celery

  flower:
    extends:
      file: docker-compose-billing.yaml
      service: flower

  auth_service:
    extends:
      file: docker-compose-auth.yaml
      service: auth_service
    environment:
      AUTH_PROJECT_ROOT_URL: /auth
      AUTH_DEBUG: "False"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://localhost:5000"
        tag: "auth"

  nginx:
    image: nginx:latest
    depends_on:
      - billing_service
      - auth_service
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - static_volume:/opt/admin/static
      - media_volume:/opt/admin/media
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://localhost:5000"
        tag: "nginx"
    ports:
      - 80:80

  postgres:
    extends:
      file: docker-compose-common.yaml
      service: postgres
    environment:
      POSTGRES_USER: ${PG_ADMIN_BILLING_USER}
      POSTGRES_DB: ${PG_ADMIN_BILLING_PASSWORD}
      POSTGRES_PASSWORD: ${PG_ADMIN_BILLING_DB_NAME}

  redis:
    extends:
      file: docker-compose-common.yaml
      service: redis

  rabbit:
    extends:
      file: docker-compose-common.yaml
      service: rabbit

  logstash:
    extends:
      file: docker-compose-logging.yaml
      service: logstash

  elasticsearch:
    extends:
      file: docker-compose-logging.yaml
      service: elasticsearch

  jaeger:
    extends:
      file: docker-compose-logging.yaml
      service: jaeger

volumes:
  db_volume:
  static_volume:
  media_volume:
  worker_data:
  flower_data:


secrets:
  rsa_pub:
    file: ./keys/rsa.pub
  rsa_priv:
    file: ./keys/rsa.private
  service_accounts:
    file: ./keys/services.json
